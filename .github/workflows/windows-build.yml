name: Windows Builds

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        targetplatform: [x64]
        python-version: [3.7]
    env:
      SDK_ARCH: ${{ matrix.sdk-version }}
      SDK: release-1911
      GDAL_VERSION: 3.2.2
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.targetplatform }}
      - name: build
        shell: pwsh
        run: |
            if("${{ matrix.targetplatform }}" -eq "x64") {$env:SDK_ARCH="-x64"} else {$env:SDK_ARCH=""}
            $env:SDK_ZIP="$env:SDK$env:SDK_ARCH-dev.zip"
            $env:SDK_UNZIP_DIR="$env:SDK$env:SDK_ARCH"
            $env:SDK_URL="http://download.gisinternals.com/sdk/downloads/$env:SDK_ZIP"
            if(-Not (Test-Path -Path downloads)) { mkdir downloads }
            cd downloads
            if(-Not (Test-Path -Path $env:SDK_ZIP )) { Invoke-WebRequest "$env:SDK_URL" -OutFile "$env:SDK_ZIP" }
            cd ..
            mkdir sdk
            cd sdk
            7z x ..\downloads\$env:SDK_ZIP
            $env:SDK_PREFIX="$env:GITHUB_WORKSPACE\sdk\$env:SDK$env:SDK_ARCH"
            $env:INCLUDE="$env:SDK_PREFIX\include"
            $env:LIB="$env:SDK_PREFIX\lib"
            $env:LINK="$env:SDK_PREFIX\lib\gdal_i.lib"
            cd ../
            pip install wheel delvewheel
            pip wheel --no-deps .
            $env:PATH="$env:SDK_PREFIX\bin;$env:PATH"
            delvewheel show -v --add-path $env:SDK_PREFIX\bin rasterio*.whl
            # delvewheel repair -v --add-path $env:SDK_PREFIX\bin rasterio*.whl
            dir
