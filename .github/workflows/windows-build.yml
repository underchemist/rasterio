name: Windows Builds

on: workflow_dispatch

jobs:
  deps:
    name: Download SDK
    runs-on: windows-latest
    strategy:
      matrix:
        targetplatform: [x86, x64]
    env:
      SDK_ARCH: ${{ matrix.sdk-version }}
      SDK: release-1911
    steps:
      - name: setup environment
        shell: pwsh
        run: |
            if("${{ matrix.targetplatform }}" -eq "x64") {$env:SDK_ARCH="-x64"} else {$env:SDK_ARCH=""}
            $env:SDK_ZIP="$env:SDK$env:SDK_ARCH-dev.zip"
            $env:SDK_URL="http://download.gisinternals.com/sdk/downloads/$env:SDK_ZIP"
            echo "SDK_ARCH=$env:SDK_ARCH" >> $env:GITHUB_ENV
            echo "SDK_ZIP=$env:SDK_ZIP" >> $env:GITHUB_ENV
            echo "SDK_URL=$env:SDK_URL" >> $env:GITHUB_ENV
      - name: download deps
        shell: pwsh
        run: |
            if(-Not (Test-Path -Path downloads)) { mkdir downloads }
            cd downloads
            if(-Not (Test-Path -Path $env:SDK_ZIP )) { Invoke-WebRequest "$env:SDK_URL" -OutFile "$env:SDK_ZIP" }
            cd ..
            if(-Not (Test-Path -Path sdk)) { mkdir sdk }
            write-host "test1"
            dir $env:GITHUB_WORKSPACE
            write-host "test2"
            dir $env:GITHUB_WORKSPACE\sdk
            cd sdk
            7z x ..\downloads\$env:SDK_ZIP
            write-host "test3"
            dir $env:GITHUB_WORKSPACE\sdk
      - name: cache deps
        uses: actions/cache@v2
        id: cache-gisinternals
        with:
          path: ~\sdk
          key: ${{ runner.os }}-${{ matrix.targetplatform }}-v9
  build:
    needs: deps
    name: Build Wheels
    runs-on: windows-latest
    strategy:
      matrix:
        targetplatform: [x86, x64]
        python-version: [3.6, 3.7, 3.8, 3.9]
    env:
      SDK_ARCH: ${{ matrix.sdk-version }}
      SDK: release-1911
      GDAL_VERSION: 3.2.1
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.targetplatform }}
      - name: setup environment
        shell: pwsh
        run: |
            if("${{ matrix.targetplatform }}" -eq "x64") {$env:SDK_ARCH="-x64"} else {$env:SDK_ARCH=""}
            $env:SDK_ZIP="$env:SDK$env:SDK_ARCH-dev.zip"
            $env:SDK_URL="http://download.gisinternals.com/sdk/downloads/$env:SDK_ZIP"
            echo "SDK_ARCH=$env:SDK_ARCH" >> $env:GITHUB_ENV
            echo "SDK_ZIP=$env:SDK_ZIP" >> $env:GITHUB_ENV
            echo "SDK_URL=$env:SDK_URL" >> $env:GITHUB_ENV
      - name: cache deps
        uses: actions/cache@v2
        id: cache-gisinternals
        with:
          path: ~\sdk
          key: ${{ runner.os }}-${{ matrix.targetplatform }}-v9
      - name: wheel
        shell: pwsh
        run: |
            cd $env:GITHUB_WORKSPACE
            $env:SDK_PREFIX="$env:GITHUB_WORKSPACE\sdk\$env:SDK$env:SDK_ARCH"
            $env:INCLUDE="$env:SDK_PREFIX\include"
            $env:LIB="$env:SDK_PREFIX\lib"
            $env:LINK="$env:SDK_PREFIX\lib\gdal_i.lib"
            pip install wheel delvewheel
            pip wheel --no-deps .
            $env:PATH="$env:SDK_PREFIX\bin;$env:PATH"
            $wheel = get-ChildItem rasterio*whl | Select-Object -Expand Name
            delvewheel repair -v --add-path $env:SDK_PREFIX\bin --no-dll="vcruntime140_1.dll;concrt140.dll;msvcp140.dll" $wheel
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: rasterio-wheel-py${{ matrix.python-version}}-${{ matrix.targetplatform }}
          path: wheelhouse/rasterio*.whl
